<?php
session_start();
include("connect.php");

// If already logged in, redirect to admin page
if (isset($_SESSION['is_admin']) && $_SESSION['is_admin'] === true) {
    header("Location: admin.php");
    exit();
}

$error = '';
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["log"])) {
    $username = isset($_POST["username"]) ? trim($_POST["username"]) : '';
    $password = isset($_POST["password"]) ? trim($_POST["password"]) : '';

    if (empty($username) || empty($password)) {
        $error = "Please enter both username and password";
    } else {
        // First get the user by username only
        $sql = "SELECT * FROM admin WHERE username = ?";
        $stmt = mysqli_prepare($dbcon, $sql);
        
        if ($stmt) {
            mysqli_stmt_bind_param($stmt, "s", $username);
            mysqli_stmt_execute($stmt);
            $result = mysqli_stmt_get_result($stmt);
            
            if ($result && mysqli_num_rows($result) == 1) {
                $row = mysqli_fetch_assoc($result);
                
                // Direct password comparison (as per database)
                if ($password === $row['password']) {
                    // Set session variables
                    $_SESSION["username"] = $row['username']; // Use from database
                    $_SESSION["admin_id"] = $row["id"];
                    $_SESSION["is_admin"] = true;
                    
                    // Clear any existing output and redirect
                    ob_clean();
                    header("Location: admin.php");
                    exit();
                }
            }
            mysqli_stmt_close($stmt);
        }
        
        // If we reach here, authentication failed
        $error = "Invalid username or password";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
</head>
<body>
<?php
// Error message display
if (!empty($error)) {
    echo "<div class=\"toast-notification animate__animated animate__slideInRight\">
            <div class=\"toast-icon\">
                <i class=\"fas fa-shield-alt\"></i>
            </div>
            <div class=\"toast-content\">
                <h4><i class=\"fas fa-exclamation-circle\"></i> Authentication Failed</h4>
                <p><i class=\"fas fa-times-circle\"></i> " . htmlspecialchars($error) . "</p>
            </div>
            <button class=\"toast-close\" onclick=\"this.parentElement.remove()\">
                <i class=\"fas fa-times\"></i>
            </button>
          </div>";
}

    if (isset($error)) {
        echo "<div class=\"toast-notification animate__animated animate__slideInRight\">
                <div class=\"toast-icon\">
                    <i class=\"fas fa-shield-alt\"></i>
                </div>
                <div class=\"toast-content\">
                    <h4><i class=\"fas fa-exclamation-circle\"></i> Authentication Failed</h4>
                    <p><i class=\"fas fa-times-circle\"></i> " . htmlspecialchars($error) . "</p>
                </div>
                <button class=\"toast-close\" onclick=\"this.parentElement.remove()\">
                    <i class=\"fas fa-times\"></i>
                </button>
              </div>";
    }
}
?>

<div class="login-wrapper">
    <div class="login-glass">
        <div class="login-header">
            <div class="logo-circle">
                <i class="fas fa-shield-alt"></i>
            </div>
            <h2>Secure Access</h2>
            <p>Administrator Portal</p>
        </div>
        
        <form method="POST" action="" class="login-form" id="loginForm" onsubmit="return validateForm(event)">
            <div class="input-field" id="usernameField">
                <div class="input-wrapper">
                    <i class="fas fa-user input-icon"></i>
                    <input type="text" name="username" placeholder="Username">
                    <div class="underline"></div>
                </div>
                <div class="error-text">Please enter your username</div>
            </div>
            
            <div class="input-field" id="passwordField">
                <div class="input-wrapper">
                    <i class="fas fa-lock input-icon"></i>
                    <input type="password" name="password" placeholder="Password">
                    <button type="button" class="password-toggle" onclick="togglePassword(this)">
                        <i class="fas fa-eye"></i>
                    </button>
                    <div class="underline"></div>
                </div>
                <div class="error-text">Please enter your password</div>
            </div>
            
            <button type="submit" name="log" class="login-btn">
                <span>Authenticate</span>
                <i class="fas fa-arrow-right"></i>
            </button>
        </form>
        
        <div class="login-footer">
            <div class="security-indicator">
                <div class="dots">
                    <span class="active"></span>
                    <span class="active"></span>
                    <span class="active"></span>
                </div>
                <span>Encrypted Connection</span>
            </div>
        </div>
    </div>
</div>

<script>
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }
    
    // Clear form fields after error
    <?php if (isset($_POST['log']) && !isset($_SESSION['username'])) { ?>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelector('input[name="username"]').value = '';
            document.querySelector('input[name="password"]').value = '';
        });
    <?php } ?>

    function togglePassword(button) {
        const passwordField = button.closest('.input-field');
        const passwordInput = passwordField.querySelector('input');
        const icon = button.querySelector('i');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    }

    function validateForm(event) {
        event.preventDefault();
        let isValid = true;
        
        // Validate username
        const usernameField = document.getElementById('usernameField');
        const username = usernameField.querySelector('input').value.trim();
        if (username === '') {
            usernameField.classList.add('error');
            isValid = false;
        } else {
            usernameField.classList.remove('error');
        }

        // Validate password
        const passwordField = document.getElementById('passwordField');
        const password = passwordField.querySelector('input').value.trim();
        if (password === '') {
            passwordField.classList.add('error');
            isValid = false;
        } else {
            passwordField.classList.remove('error');
        }

        // If valid, submit the form
        if (isValid) {
            event.target.submit();
        }
    }

    // Remove error state when user starts typing
    document.querySelectorAll('.input-field input').forEach(input => {
        input.addEventListener('input', () => {
            input.closest('.input-field').classList.remove('error');
        });
    });
</script>

<style>
/* Base Styles */
:root {
    --primary: #6366f1;
    --primary-dark: #4f46e5;
    --text: #2d3748;
    --light: #f8fafc;
    --border: #e2e8f0;
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

body {
    background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
    font-family: 'Inter', sans-serif;
    color: var(--text);
    margin:0px;
}

/* Login Wrapper */
.login-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

/* Glass Effect */
.login-glass {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    padding: 40px;
    width: 100%;
    max-width: 400px;
    box-shadow: var(--shadow);
    border: 1px solid rgba(255, 255, 255, 0.3);
    overflow: hidden;
    position: relative;
}

.login-glass::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        to bottom right,
        rgba(99, 102, 241, 0.1) 0%,
        rgba(255, 255, 255, 0) 50%,
        rgba(79, 70, 229, 0.1) 100%
    );
    transform: rotate(30deg);
    z-index: -1;
}

/* Header */
.login-header {
    text-align: center;
    margin-bottom: 30px;
}

.logo-circle {
    width: 80px;
    height: 80px;
    margin: 0 auto 15px;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 32px;
    box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
}

.login-header h2 {
    margin: 10px 0 5px;
    font-weight: 600;
    color: var(--text);
}

.login-header p {
    color: #64748b;
    font-size: 14px;
}

/* Input Fields */
.input-field {
    position: relative;
    margin-bottom: 25px;
}

.input-field .input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
}

.input-field .input-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: #94a3b8;
    transition: all 0.3s;
    z-index: 1;
}

.input-field input {
    width: 100%;
    padding: 12px 45px;
    border: 1px solid var(--border);
    background: var(--light);
    border-radius: 8px;
    font-size: 15px;
    transition: all 0.3s;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

.input-field.error .input-wrapper input {
    border-color: #dc2626;
    background-color: #fff5f5;
}

.input-field.error .input-icon {
    color: #dc2626;
}

.error-text {
    color: #dc2626;
    font-size: 12px;
    margin-top: 6px;
    display: none;
    padding-left: 45px;
}

.input-field.error .error-text {
    display: block;
}

.input-wrapper {
    margin-bottom: 4px;
    position: relative;
}

.input-field input:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
}

.input-field input:focus + .input-icon {
    color: var(--primary);
}

.underline {
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--primary);
    transition: width 0.4s;
}

.input-field input:focus ~ .underline {
    width: 100%;
}

/* Password Toggle Button */
.password-toggle {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    background: #f1f5f9;
    border: 1px solid #e2e8f0;
    color: #64748b;
    cursor: pointer;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    border-radius: 50%;
    z-index: 2;
}

.password-toggle:hover {
    background: #e2e8f0;
    color: var(--primary);
    border-color: var(--primary-light);
}

.password-toggle:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
    color: var(--primary);
}

.password-toggle i {
    font-size: 16px;
    transition: transform 0.3s ease;
}

.password-toggle:hover i {
    transform: scale(1.1);
}

/* Login Button */
.login-btn {
    width: 100%;
    padding: 14px;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    color: white;
    border: none;
    border-radius: 8px;
    font-weight: 500;
    font-size: 15px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    transition: all 0.3s;
    box-shadow: 0 4px 10px rgba(79, 70, 229, 0.3);
}

.login-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba(79, 70, 229, 0.4);
}

.login-btn i {
    transition: transform 0.3s;
}

.login-btn:hover i {
    transform: translateX(3px);
}

/* Footer */
.login-footer {
    margin-top: 30px;
    text-align: center;
}

.security-indicator {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    font-size: 13px;
    color: #64748b;
}

.dots {
    display: flex;
    gap: 5px;
}

.dots span {
    display: inline-block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #10b981;
    opacity: 0.7;
}

.dots span.active {
    opacity: 1;
    animation: pulse 1.5s infinite;
}

.dots span:nth-child(2) {
    animation-delay: 0.2s;
}

.dots span:nth-child(3) {
    animation-delay: 0.4s;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

/* Toast Notification */
.toast-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    background: white;
    border-radius: 12px;
    padding: 16px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    display: flex;
    align-items: flex-start;
    gap: 12px;
    z-index: 1000;
    border-left: 4px solid #dc2626;
    max-width: 350px;
    animation-duration: 0.5s;
    animation-fill-mode: both;
}

.toast-icon {
    background: #fee2e2;
    color: #dc2626;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.toast-content {
    flex: 1;
}

.toast-content h4 {
    margin: 0 0 4px 0;
    color: #1f2937;
    font-size: 15px;
    font-weight: 600;
}

.toast-content p {
    margin: 0;
    color: #6b7280;
    font-size: 13px;
    display: flex;
    align-items: center;
    gap: 6px;
}

.toast-content h4 {
    display: flex;
    align-items: center;
    gap: 6px;
}

.toast-content i {
    font-size: 14px;
    color: #dc2626;
}

.toast-close {
    position: absolute;
    top: 8px;
    right: 8px;
    background: none;
    border: none;
    color: #9ca3af;
    cursor: pointer;
    padding: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all 0.3s ease;
}

.toast-close:hover {
    background: #f3f4f6;
    color: #6b7280;
}

/* Animations */
.animate__animated {
    animation-duration: 0.5s;
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

.animate__slideInRight {
    animation-name: slideInRight;
}

/* Auto-hide the toast after 5 seconds */
.toast-notification {
    animation: slideInRight 0.5s ease forwards, fadeOut 0.5s ease forwards 4.5s;
}
</style>
</body>
</html>